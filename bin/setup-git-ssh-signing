#! /usr/bin/env bash

set -o errexit

git_version=$(git version | cut -d" " -f3)
echo
echo "Beginning git signing setup (git ${git_version})"
echo

git_major=$(echo "$git_version" | cut -d'.' -f1)
git_minor=$(echo "$git_version" | cut -d'.' -f2)

if [ "${git_major}" -lt "3" ] && [ "${git_minor}" -lt "34" ] ; then
  echo "Git version higher than 2.34 required for signing with SSH keys"
  echo
  echo "First install a more recent version of git, eg:"
  echo
  echo "    brew install git"
  echo
  exit 1
fi

echo "Checking gitsigning key is set up"
echo
ssh-keygen -t ed25519 -N "" -f ~/.ssh/id_ed25519_gitsigning || true

echo
echo "Setting SSH signing with ~/.ssh/id_ed25519_gitsigning"
git config --global user.signingkey '~/.ssh/id_ed25519_gitsigning'
git config --global commit.gpgsign true
git config --global gpg.format ssh
git config --global gpg.ssh.allowedsignersfile '~/.ssh/allowed_signers'

signing_file_public_key=$(cat ~/.ssh/id_ed25519_gitsigning.pub)
echo "$(git config user.email) ${signing_file_public_key}" >> ~/.ssh/allowed_signers

# Make allowed_signers unique
cat ~/.ssh/allowed_signers | sort -u > ~/.ssh/allowed_signers.tmp
mv -f ~/.ssh/allowed_signers.tmp ~/.ssh/allowed_signers

echo
echo "Allowed signers"
echo
cat ~/.ssh/allowed_signers

echo
echo "Signing public key"
echo "Provide to GitHub via https://github.com/settings/ssh/new"
echo
echo "${signing_file_public_key}"
echo
